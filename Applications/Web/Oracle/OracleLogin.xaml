<Activity mc:Ignorable="sap sap2010" x:Class="Oracle" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>542,1001</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Desc : Open Oracle ERP System to download desktop application which will be used by OracleProcessing WF.&#xA;&#xA;Inputs: &#xA;- in_Config&#xA;Output:&#xA;- N/A&#xA;&#xA;Steps [Breif]:&#xA;1. Open Oracle ERP URL&#xA;2. Set Credentilas&#xA;3. Download Application&#xA;&#xA;Types Of Exceptions: &#xA;- SE&#xA;- BE&#xA;&#xA;--&gt; Retry should be used " DisplayName="Oracle" sap:VirtualizedContainerService.HintSize="552,936" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch - ERP Login" sap:VirtualizedContainerService.HintSize="490,543" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessException" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence DisplayName="Actions" sap:VirtualizedContainerService.HintSize="472,563" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:RetryScope DisplayName="Retry Scope - SE Only" sap:VirtualizedContainerService.HintSize="410,52" sap2010:WorkflowViewState.IdRef="RetryScope_2">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <Sequence sap2010:Annotation.AnnotationText="- Initialization&#xA;- Kill MSEdge&#xA;- Open Edge&#xA;- check if already logged in if so perform logout&#xA;- check main screen existance&#xA;- set credentials " DisplayName="Action" sap:VirtualizedContainerService.HintSize="1032,2145" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="970,81" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Is SE occured" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:BusinessRuleException">
                          <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">BusinessException</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:BusinessRuleException">
                          <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">null</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence sap2010:Annotation.AnnotationText="- Kill MSedge&#xA;- SE can be thrown" DisplayName="Kill MSEdge" sap:VirtualizedContainerService.HintSize="970,123" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="&quot;Kill MSedge Process [&quot;+in_Config[&quot;MSEdgeProcessName&quot;].ToString()+&quot;]&quot;" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"Kill MSedge Process ["+in_Config["MSEdgeProcessName"].ToString()+"]"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process - Edge" sap:VirtualizedContainerService.HintSize="387.2,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_2">
                      <ui:KillProcess.ProcessName>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">in_Config["MSEdgeProcessName"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:KillProcess.ProcessName>
                    </ui:KillProcess>
                    <ui:LogMessage DisplayName="&quot;MSEdge process killed successfully&quot;" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">"MSEdge process killed successfully"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </Sequence>
                  <Sequence sap2010:Annotation.AnnotationText="- Open edge and navigate to targer URL&#xA;- Close Popups" DisplayName="Open Edge" sap:VirtualizedContainerService.HintSize="970,123" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="&quot;Open Oracle ERP System Url [&quot;+in_Config[&quot;OracleWebApplicationURL&quot;].ToString()+&quot;]&quot;" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">"Open Oracle ERP System Url ["+in_Config["OracleWebApplicationURL"].ToString()+"]"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Open Browser - Target URL" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="OpenBrowser_1">
                      <ui:OpenBrowser.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,415" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Close Popups" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">"Maximize window, Close popups"</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                            </ui:LogMessage>
                            <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'push button  Close'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="23a37f9c-e8bb-4d46-b576-7c9fae3ecf24" InformativeScreenshot="24cc740b701d45ad1713a3c13bdf753c" Selector="&lt;wnd app='msedge.exe' cls='*' title='Restore pages' /&gt;&lt;ctrl name='Restore pages' role='alert' /&gt;&lt;ctrl name='Close' role='push button' /&gt;" WaitForReady="COMPLETE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">Int32.Parse(in_Config["TO_LVL05"].ToString())</CSharpValue>
                                    </InArgument>
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                          </Sequence>
                        </ActivityAction>
                      </ui:OpenBrowser.Body>
                      <ui:OpenBrowser.Url>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">in_Config["OracleWebApplicationURL"].ToString()</CSharpValue>
                        </InArgument>
                      </ui:OpenBrowser.Url>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:OpenBrowser>
                  </Sequence>
                  <Sequence sap2010:Annotation.AnnotationText="- check if already logged in if so perform logout&#xA;- check main screen existance&#xA;- set credentials " DisplayName="Pickbranch" sap:VirtualizedContainerService.HintSize="970,1333" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Attach Browser - Oracle ERP Portal" sap:VirtualizedContainerService.HintSize="908,1165" sap2010:WorkflowViewState.IdRef="BrowserScope_2" Selector="&lt;html app='msedge.exe' url='*erpupgradeapps.echem*' /&gt;">
                      <ui:BrowserScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Pick sap2010:Annotation.AnnotationText="- if logged in then perform loggout then login again&#xA;- if login screen reached then perform login " sap:VirtualizedContainerService.HintSize="874,1056" sap2010:WorkflowViewState.IdRef="Pick_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <PickBranch DisplayName="If Logged-In" sap:VirtualizedContainerService.HintSize="200,967" sap2010:WorkflowViewState.IdRef="PickBranch_1">
                              <PickBranch.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="isLoggoutBtnExist" />
                              </PickBranch.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <PickBranch.Trigger>
                                <ui:UiElementExists DisplayName="Element Exists - Loggout Btn" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                                  <ui:UiElementExists.Exists>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">isLoggoutBtnExist</CSharpReference>
                                    </OutArgument>
                                  </ui:UiElementExists.Exists>
                                  <ui:UiElementExists.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="89da7673-e809-4c4f-88d3-0c746f8f5f30" Selector="&lt;html app='msedge.exe' title='*' /&gt;&lt;webctrl id='globalHeaderID' tableRow='1' tag='TABLE' /&gt;&lt;webctrl aaname='Logout' parentid='globalHeaderID' tableRow='1' tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:UiElementExists.Target>
                                </ui:UiElementExists>
                              </PickBranch.Trigger>
                              <Sequence DisplayName="Logout&amp;Login" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="&quot;Already Logged In, Perform Logout&quot;" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">"Already Logged In, Perform Logout"</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - LogoutBtn" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="4a6d5f52-c9f9-4a44-b9fa-b815663ef90a">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                                <ui:LogMessage DisplayName="&quot;Perform Login&quot;" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">"Perform Login, Set Credentials -&gt; Click Login"</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into - Username" EmptyField="True" sap:VirtualizedContainerService.HintSize="388,115" sap2010:WorkflowViewState.IdRef="TypeInto_3" SimulateType="True">
                                  <ui:TypeInto.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8e039524-a814-42c2-a4d8-a9ee205818bf" Selector="&lt;webctrl id='usernameField' tag='INPUT' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:TypeInto.Target>
                                  <ui:TypeInto.Text>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">((NetworkCredential)in_Config["OracleAppCredentials"]).UserName</CSharpValue>
                                    </InArgument>
                                  </ui:TypeInto.Text>
                                </ui:TypeInto>
                                <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Secure Text - Password" EmptyField="True" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="TypeSecureText_2" SimulateType="True">
                                  <ui:TypeSecureText.SecureText>
                                    <InArgument x:TypeArguments="ss:SecureString">
                                      <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">((NetworkCredential)in_Config["OracleAppCredentials"]).SecurePassword</CSharpValue>
                                    </InArgument>
                                  </ui:TypeSecureText.SecureText>
                                  <ui:TypeSecureText.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7b4dfc71-d338-4ded-b351-a76d0d8473a5" Selector="&lt;webctrl id='passwordField' tag='INPUT' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:TypeSecureText.Target>
                                </ui:TypeSecureText>
                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Login" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="92b2996f-7ef0-45bb-9e42-fb02e38d49f9" Selector="&lt;webctrl tag='BUTTON' title='Login' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                              </Sequence>
                            </PickBranch>
                            <PickBranch DisplayName="If Login Screen Reached" sap:VirtualizedContainerService.HintSize="500,967" sap2010:WorkflowViewState.IdRef="PickBranch_2">
                              <PickBranch.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="isLoginScreenExist" />
                              </PickBranch.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <PickBranch.Trigger>
                                <ui:UiElementExists DisplayName="Element Exists - Login Screen" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                                  <ui:UiElementExists.Exists>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">isLoginScreenExist</CSharpReference>
                                    </OutArgument>
                                  </ui:UiElementExists.Exists>
                                  <ui:UiElementExists.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="555fa4a7-1f55-42e7-b5ff-243d740bd67d" Selector="&lt;webctrl tag='BUTTON' title='Login' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:UiElementExists.Target>
                                </ui:UiElementExists>
                              </PickBranch.Trigger>
                              <Sequence DisplayName="Login" sap:VirtualizedContainerService.HintSize="450,681" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="&quot;Perform Login&quot;" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">"Perform Login, Set Credentials -&gt; Click Login"</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" DisplayName="Type Into - Username" EmptyField="True" sap:VirtualizedContainerService.HintSize="388,135" sap2010:WorkflowViewState.IdRef="TypeInto_2" SimulateType="True">
                                  <ui:TypeInto.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8e039524-a814-42c2-a4d8-a9ee205818bf" Selector="&lt;webctrl id='usernameField' tag='INPUT' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:TypeInto.Target>
                                  <ui:TypeInto.Text>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">((NetworkCredential)in_Config["OracleAppCredentials"]).UserName</CSharpValue>
                                    </InArgument>
                                  </ui:TypeInto.Text>
                                </ui:TypeInto>
                                <ui:TypeSecureText AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Secure Text - Password" EmptyField="True" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SimulateType="True">
                                  <ui:TypeSecureText.SecureText>
                                    <InArgument x:TypeArguments="ss:SecureString">
                                      <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">((NetworkCredential)in_Config["OracleAppCredentials"]).SecurePassword</CSharpValue>
                                    </InArgument>
                                  </ui:TypeSecureText.SecureText>
                                  <ui:TypeSecureText.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7b4dfc71-d338-4ded-b351-a76d0d8473a5" Selector="&lt;webctrl id='passwordField' tag='INPUT' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:TypeSecureText.Target>
                                </ui:TypeSecureText>
                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - Login" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="92b2996f-7ef0-45bb-9e42-fb02e38d49f9" Selector="&lt;webctrl tag='BUTTON' title='Login' /&gt;" WaitForReady="COMPLETE">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                              </Sequence>
                            </PickBranch>
                          </Pick>
                        </ActivityAction>
                      </ui:BrowserScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:BrowserScope>
                  </Sequence>
                  <Sequence sap2010:Annotation.AnnotationText="- check main screen and throw SE | BE if not login success" DisplayName="Check Mainscreen" sap:VirtualizedContainerService.HintSize="970,112" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="isHomePageExist" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Check Main Screen" sap:VirtualizedContainerService.HintSize="586,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">"Check Main Screen ..."</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:UiElementExists DisplayName="Element Exists 'Echem Check Employee'" sap:VirtualizedContainerService.HintSize="586,107" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                      <ui:UiElementExists.Exists>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">isHomePageExist</CSharpReference>
                        </OutArgument>
                      </ui:UiElementExists.Exists>
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3e00e124-0b2f-41b9-b28a-58c328af05bd" InformativeScreenshot="0bddeb8a8576a27bc810c29e2fc01035" Selector="&lt;html app='msedge.exe' url='*erpupgradeapps.echem*' /&gt;&lt;webctrl id='respList' tableRow='1' tag='TABLE' /&gt;&lt;webctrl class='textdivresp' aaname='Echem Check Employee' /&gt;" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                    <If DisplayName="If - Check Main Screen" sap:VirtualizedContainerService.HintSize="586,1311" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">isHomePageExist</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="&quot;Login performed successfully&quot;" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info">
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">"Login performed successfully"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="552,949" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="isBEOccured" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:UiElementExists DisplayName="Element Exists 'BE error'" sap:VirtualizedContainerService.HintSize="510,107" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                            <ui:UiElementExists.Exists>
                              <OutArgument x:TypeArguments="x:Boolean">
                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">isBEOccured</CSharpReference>
                              </OutArgument>
                            </ui:UiElementExists.Exists>
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3e00e124-0b2f-41b9-b28a-58c328af05bd" InformativeScreenshot="0bddeb8a8576a27bc810c29e2fc01035" Selector="&lt;html app='msedge.exe' url='*erpupgradeapps.echem*' /&gt;&lt;webctrl id='respList' tableRow='1' tag='TABLE' /&gt;&lt;webctrl class='textdivresp' aaname='Echem Check Employee' /&gt;" WaitForReady="COMPLETE">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">Int32.Parse(in_Config["TO_LVL05"].ToString())</CSharpValue>
                                  </InArgument>
                                </ui:Target.TimeoutMS>
                              </ui:Target>
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                          <If sap2010:Annotation.AnnotationText="If BE occured then continue, else throw SE to retry" DisplayName="If - Look for BE" sap:VirtualizedContainerService.HintSize="510,714" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">isBEOccured</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign - BE" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">
                                      <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">BusinessException</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:BusinessRuleException">
                                      <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">new BusinessRuleException("Cannot loggin into oracle ERP System ,Invalid Credentials")</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,331" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Take Screenshot - SE" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Processes\\Utilities\\TakeScreenshot.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Folder">Data\\Screenshots</InArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Throw DisplayName="Throw - SE" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2">
                                  <InArgument x:TypeArguments="s:Exception">
                                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">new Exception("Unpredictable exception occured while loggin on oracle ERP System!")</CSharpValue>
                                  </InArgument>
                                </Throw>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
          <If DisplayName="If - BE Occured" sap:VirtualizedContainerService.HintSize="410,360" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">BusinessException!=null</CSharpValue>
              </InArgument>
            </If.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Throw - BE" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3">
                  <InArgument x:TypeArguments="s:Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">BusinessException</CSharpValue>
                  </InArgument>
                </Throw>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21" />
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="456,358" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="BE" sap:VirtualizedContainerService.HintSize="450,289" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Utils\\TakeScreenshot.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Folder">
                    <Literal x:TypeArguments="x:String">Data\\Screenshots</Literal>
                  </InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Rethrow DisplayName="Rethrow - BE" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="456,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="SE" sap:VirtualizedContainerService.HintSize="496,657" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Utils\\TakeScreenshot.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Folder">Data\\Screenshots</InArgument>
                  <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:LogMessage DisplayName="Log Message - SE" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Error">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <Assign DisplayName="Assign - Exception" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">
                    <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">exception</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">new Exception("Unpredictable error occured while performing login process to Oracle Web Application, kindly contact to the administrator for more details.")</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Throw DisplayName="Throw SE" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="Throw_4">
                <InArgument x:TypeArguments="s:Exception">
                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">exception</CSharpValue>
                </InArgument>
              </Throw>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>